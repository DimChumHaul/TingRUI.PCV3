<Controls:MetroWindow
        x:Class="PCChageTermialV3.TingRUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Data="clr-namespace:TingRUI.Data.Models.DataTemplate;assembly=TingRUI.Data"
        xmlns:SVG ="http://metro.mahapps.com/winfx/xaml/iconpacks"    
        mc:Ignorable="d" x:Name="WinMain"
        DataContext="{Binding Source={StaticResource Locator},Path=Main}"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        Title="{Binding Path=AppInfo}" Height="768" Width="1024" 
        WindowStartupLocation="CenterScreen" WindowState="Maximized" 
        Cursor="Arrow" AllowDrop="True" Tag="1000" Visibility="Visible" 
        xmlns:MvvmLight="http://www.galasoft.ch/mvvmlight"
        xmlns:I="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        BorderThickness="2.5" Background="{x:Null}">
    <!--为了使用MVVMLight中 EventToCommand-[事件转命令] 功能。-->

    <Controls:MetroWindow.Resources>
        <Thickness x:Key="InnerBannerMargin">2.5</Thickness>
        <Thickness x:Key="ItemViewsMargin">2.5</Thickness>

        <!-- 顶部菜单栏核心布局 这种UI在WPF的实现中以`样式Style`的方式实现 -->
        <Style TargetType="ListBox" x:Key="TopListStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <WrapPanel Orientation="Horizontal" FlowDirection="LeftToRight" 
                                   IsItemsHost="True" Margin="1" Background="Snow">
                        </WrapPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="2.5 0 2.5 0"/>
            <Setter Property="SelectedIndex" Value="7" />
        </Style>

        <DataTemplate DataType="{x:Type Data:ModulizedBtn}">
            <Controls:DropDownButton Name="Setting" 
                                     Margin="{StaticResource ItemViewsMargin}" MinWidth="64"
                                     Content="{Binding Path=Title}"
                                     Orientation="Vertical" 
                                     DisplayMemberPath="{Binding Path=OrderIndex}">
                <!--命令的ICON图标-->
                <Controls:DropDownButton.Icon>
                    <SVG:PackIconModern Margin="5" Kind="{Binding Path=SVGImage}" MinWidth="32" MinHeight="32"/>
                </Controls:DropDownButton.Icon>

                <I:Interaction.Triggers>
                    <I:EventTrigger EventName="Click">
                        <MvvmLight:EventToCommand 
                            Command="{Binding DataContext.FuncModuleCMD,
                            RelativeSource=
                            {RelativeSource Mode=FindAncestor,AncestorType=ListBox}}" />
                    </I:EventTrigger>

                    <!-- 1.多触发器 2.参数的传递 是底层DataModel -->
                    <I:EventTrigger EventName="MouseEnter">
                        <MvvmLight:EventToCommand 
                            Command="{Binding ChangeBgColorCMD,
                            RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBox}}" 
                            CommandParameter="{Binding ElementName=TopView,Path=SelectedItem}" />
                    </I:EventTrigger>
                </I:Interaction.Triggers>

            </Controls:DropDownButton>
        </DataTemplate>
    </Controls:MetroWindow.Resources>

    <Grid x:Name="MainWinGView">
        <!--首页不设置列定义 全部用1列N行 行内再嵌入复杂布局-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="6.18*" />
            <RowDefinition Height="32" />
        </Grid.RowDefinitions>

        <!--计费+监控...功能模块-->
        <ListBox Grid.Row="0" Style="{StaticResource TopListStyle}"
                 ItemsSource="{Binding Path=AcceptModuels}"
                 Name="TopView" />
          
        <Grid x:Name="DataDynamicView" Grid.Row="1" Margin="{StaticResource InnerBannerMargin}">
            <Grid.Background>
                <ImageBrush ImageSource="{Binding Path=TodaysBackImage,Mode=OneWay}" Stretch="UniformToFill"/>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.75*" />
                <ColumnDefinition Width="8*" />
            </Grid.ColumnDefinitions>

            <!--树状菜单控件的第二种写法-->
            <TreeView ItemsSource="{Binding AcceptMenus}" 
                      Name="ViewX" BorderThickness="5" 
                      BorderBrush="Red" FontSize="24" Foreground="Red" 
                      Margin="10" Style="{StaticResource VirtualisedMetroTreeView}">
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type Data:ModualizedMenu}"  
                                              ItemsSource="{Binding MenuSublines}">
                        <HierarchicalDataTemplate.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Title}" />
                            </DataTemplate>
                        </HierarchicalDataTemplate.ItemTemplate>
                        <TextBlock Text="{Binding Title}" Margin="2.5" />
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>

            <Label Grid.Column="1" VerticalAlignment="Top" Content="{
                Binding AppInfo, 
                Mode=TwoWay,ValidatesOnDataErrors=True,
                UpdateSourceTrigger=PropertyChanged,
                NotifyOnValidationError=True}" 
                   Controls:TextBoxHelper.Watermark="Number smaller than 18" Width="Auto" Height="84">
            </Label>
        </Grid>

        <StatusBar Grid.Row="2">
            <StatusBarItem>底部实时状态栏</StatusBarItem>
            <Separator Style="{StaticResource MetroStatusBarSeparator}" />
            <StatusBarItem>Selected Tab:</StatusBarItem>
            <StatusBarItem Content="{Binding ElementName=MainTabControl, Path=SelectedItem.Header, Mode=OneWay}" />
        </StatusBar>

    </Grid>

</Controls:MetroWindow>
